version: "3.2"

services:

  # Kafka
  kafka:
    image: wurstmeister/kafka:1.1.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR: 10
      LOG_RETENTION_HOURS: -1
      LOG_RETENTION_BYTES: -1
      NUM_PARTITIONS: 128
      KAFKA_CREATE_TOPICS: "uris.tocrawl.fc:128:1 --config=compression.type=snappy,uris.crawled.fc:64:1 --config=compression.type=snappy,uris.discarded.fc:64:1 --config=compression.type=snappy"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      LOG4J_LOGGER_KAFKA: WARN
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # Needs a Zookeeper too
  # ----
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
     - "2181:2181"

  # Database to put tracking/stats/etc.
  crdb:
    image: cockroachdb/cockroach:v19.1.1
    command: start --insecure
    ports:
      - "8080:8080"
      - "26257:26257"

  # Helper for managing database schema migrations etc.
  # If the DB is running you can use `docker-compose run dbmate up` `docker-compose run dbmate down`
  dbmate:
    image: amacneil/dbmate
    command: up
    environment:
      - "DATABASE_URL=postgres://root@crdb:26257/defaultdb?sslmode=disable"
    volumes:
      - ./db:/db
    restart: on-failure

